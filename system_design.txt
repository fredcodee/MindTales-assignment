Database Models:

User/Employee Model:
ID
Name
email
password

Restaurant Model:
ID,
Name,
Location,


Menu Model:
ID,
Date,
Menu Items,
Foreign key to Restaurant.


Vote Model:
ID,
Foreign key to Employee,
Foreign key to Menu.
Version field to distinguish between old and new voting.
Points field to store points (1-3) for new version API.



Versioning Support:
Use middleware or custom decorators to check the app version in the request header and route the request to the appropriate logic.
For voting:
If version is old, accept only one menu ID.
If version is new, accept top three menu IDs with their points (1-3).


Tests:
Unit tests for all critical endpoints using Django’s test suite or Pytest.
Test cases for:
User authentication.
Restaurant creation and menu uploading.
Voting logic.
Results aggregation.


/project_root
│
├── /app
│   ├── /api
│   ├── /models
│   ├── /views
│   └── /tests
├── /docs
├── Dockerfile
├── docker-compose.yml
└── README.md
